/* [project]/src/app/globals.css [app-client] (css) */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-gray-300: oklch(87.2% .01 258.338);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --tracking-widest: .1em;
    --blur-md: 12px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}

@layer base {
  *, :after, :before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}

@layer components;

@layer utilities {
  .visible {
    visibility: visible;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .sticky {
    position: sticky;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-\[4vw\] {
    top: 4vw;
  }

  .top-full {
    top: 100%;
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-\[5vw\] {
    right: 5vw;
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-\[2vw\] {
    bottom: 2vw;
  }

  .bottom-\[5vw\] {
    bottom: 5vw;
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-\[0\.5vw\] {
    left: .5vw;
  }

  .left-\[2vw\] {
    left: 2vw;
  }

  .left-\[3vw\] {
    left: 3vw;
  }

  .z-10 {
    z-index: 10;
  }

  .z-30 {
    z-index: 30;
  }

  .z-40 {
    z-index: 40;
  }

  .z-50 {
    z-index: 50;
  }

  .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .mx-auto {
    margin-inline: auto;
  }

  .mt-\[1vw\] {
    margin-top: 1vw;
  }

  .mt-\[10vw\] {
    margin-top: 10vw;
  }

  .mr-\[1vw\] {
    margin-right: 1vw;
  }

  .mb-\[1\.5vw\] {
    margin-bottom: 1.5vw;
  }

  .mb-\[1vw\] {
    margin-bottom: 1vw;
  }

  .mb-\[3vw\] {
    margin-bottom: 3vw;
  }

  .mb-\[5vw\] {
    margin-bottom: 5vw;
  }

  .flex {
    display: flex;
  }

  .hidden {
    display: none;
  }

  .inline-block {
    display: inline-block;
  }

  .h-\[0\.1vw\] {
    height: .1vw;
  }

  .h-\[0vh\] {
    height: 0;
  }

  .h-\[1\.2vw\] {
    height: 1.2vw;
  }

  .h-\[1\.5vw\] {
    height: 1.5vw;
  }

  .h-\[1vw\] {
    height: 1vw;
  }

  .h-\[2vw\] {
    height: 2vw;
  }

  .h-\[5vw\] {
    height: 5vw;
  }

  .h-\[6vw\] {
    height: 6vw;
  }

  .h-\[20vh\] {
    height: 20vh;
  }

  .h-\[20vw\] {
    height: 20vw;
  }

  .h-\[25vw\] {
    height: 25vw;
  }

  .h-\[30vw\] {
    height: 30vw;
  }

  .h-\[35vw\] {
    height: 35vw;
  }

  .h-\[50vh\] {
    height: 50vh;
  }

  .h-\[50vw\] {
    height: 50vw;
  }

  .h-\[100vh\] {
    height: 100vh;
  }

  .h-\[200vh\] {
    height: 200vh;
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-screen {
    height: 100vh;
  }

  .max-h-\[5vw\] {
    max-height: 5vw;
  }

  .max-h-\[50px\] {
    max-height: 50px;
  }

  .min-h-\[100vh\] {
    min-height: 100vh;
  }

  .min-h-\[100vw\] {
    min-height: 100vw;
  }

  .w-\[0\.1vw\] {
    width: .1vw;
  }

  .w-\[0\.2vw\] {
    width: .2vw;
  }

  .w-\[1\.2vw\] {
    width: 1.2vw;
  }

  .w-\[1\.5vw\] {
    width: 1.5vw;
  }

  .w-\[1vw\] {
    width: 1vw;
  }

  .w-\[2vw\] {
    width: 2vw;
  }

  .w-\[3vw\] {
    width: 3vw;
  }

  .w-\[5vw\] {
    width: 5vw;
  }

  .w-\[6vw\] {
    width: 6vw;
  }

  .w-\[18vw\] {
    width: 18vw;
  }

  .w-\[24\.5vw\] {
    width: 24.5vw;
  }

  .w-\[45vw\] {
    width: 45vw;
  }

  .w-\[55vw\] {
    width: 55vw;
  }

  .w-\[80vw\] {
    width: 80vw;
  }

  .w-\[90vw\] {
    width: 90vw;
  }

  .w-\[100vw\] {
    width: 100vw;
  }

  .w-full {
    width: 100%;
  }

  .max-w-\[5vw\] {
    max-width: 5vw;
  }

  .max-w-\[50px\] {
    max-width: 50px;
  }

  .max-w-\[80vw\] {
    max-width: 80vw;
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-\[-0\.2vw\] {
    --tw-translate-x: -.2vw;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-\[0\.2vw\] {
    --tw-translate-x: .2vw;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-0\.2vw\] {
    --tw-translate-y: -.2vw;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[0\.2vw\] {
    --tw-translate-y: .2vw;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .rotate-\[-45deg\] {
    rotate: -45deg;
  }

  .rotate-\[90deg\] {
    rotate: 90deg;
  }

  .animate-\[rotateArrow_0\.5s_forwards\] {
    animation: .5s forwards rotateArrow;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-row {
    flex-direction: row;
  }

  .items-center {
    align-items: center;
  }

  .items-end {
    align-items: flex-end;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-\[2\.5vw\] {
    gap: 2.5vw;
  }

  .gap-\[2vw\] {
    gap: 2vw;
  }

  .gap-\[3vw\] {
    gap: 3vw;
  }

  .gap-\[6vw\] {
    gap: 6vw;
  }

  .gap-\[10vw\] {
    gap: 10vw;
  }

  .gap-\[15vw\] {
    gap: 15vw;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-black {
    border-color: var(--color-black);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-white\/20 {
    border-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .bg-\[var\(--light-gray\)\] {
    background-color: var(--light-gray);
  }

  .bg-\[var\(--light-gray\)\]\/10 {
    background-color: var(--light-gray);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--light-gray\)\]\/10 {
      background-color: color-mix(in oklab, var(--light-gray) 10%, transparent);
    }
  }

  .bg-\[var\(--teal\)\] {
    background-color: var(--teal);
  }

  .bg-\[var\(--teal\)\]\/50 {
    background-color: var(--teal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--teal\)\]\/50 {
      background-color: color-mix(in oklab, var(--teal) 50%, transparent);
    }
  }

  .bg-black {
    background-color: var(--color-black);
  }

  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-white\/20 {
    background-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/20 {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .bg-cover {
    background-size: cover;
  }

  .bg-center {
    background-position: center;
  }

  .bg-no-repeat {
    background-repeat: no-repeat;
  }

  .fill-\[var\(--dark\)\] {
    fill: var(--dark);
  }

  .fill-\[var\(--light-gray\)\] {
    fill: var(--light-gray);
  }

  .object-cover {
    object-fit: cover;
  }

  .px-\[1vw\] {
    padding-inline: 1vw;
  }

  .px-\[3vw\] {
    padding-inline: 3vw;
  }

  .px-\[4vw\] {
    padding-inline: 4vw;
  }

  .px-\[5vw\] {
    padding-inline: 5vw;
  }

  .py-\[0\.5vw\] {
    padding-block: .5vw;
  }

  .py-\[4vw\] {
    padding-block: 4vw;
  }

  .py-\[5vw\] {
    padding-block: 5vw;
  }

  .py-\[10vw\] {
    padding-block: 10vw;
  }

  .py-\[15vh\] {
    padding-block: 15vh;
  }

  .pt-\[8vw\] {
    padding-top: 8vw;
  }

  .pr-\[0\.5vw\] {
    padding-right: .5vw;
  }

  .pb-\[1\.5vw\] {
    padding-bottom: 1.5vw;
  }

  .pb-\[2vw\] {
    padding-bottom: 2vw;
  }

  .pb-\[4vw\] {
    padding-bottom: 4vw;
  }

  .pb-\[5vw\] {
    padding-bottom: 5vw;
  }

  .pb-\[10vw\] {
    padding-bottom: 10vw;
  }

  .pb-\[20vw\] {
    padding-bottom: 20vw;
  }

  .pb-\[100vw\] {
    padding-bottom: 100vw;
  }

  .text-center {
    text-align: center;
  }

  .text-\[1\.1vw\]\/\[2vw\] {
    font-size: 1.1vw;
    line-height: 2vw;
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-\[1\.2vw\] {
    font-size: 1.2vw;
  }

  .text-\[1\.4vw\] {
    font-size: 1.4vw;
  }

  .text-\[1\.5vw\] {
    font-size: 1.5vw;
  }

  .text-\[1vw\] {
    font-size: 1vw;
  }

  .text-\[2\.5vw\] {
    font-size: 2.5vw;
  }

  .text-\[2vw\] {
    font-size: 2vw;
  }

  .text-\[5\.5vw\] {
    font-size: 5.5vw;
  }

  .text-\[5vw\] {
    font-size: 5vw;
  }

  .text-\[6vw\] {
    font-size: 6vw;
  }

  .leading-\[5vw\] {
    --tw-leading: 5vw;
    line-height: 5vw;
  }

  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }

  .text-\[var\(--dark\)\] {
    color: var(--dark);
  }

  .text-\[var\(--light-gray\)\] {
    color: var(--light-gray);
  }

  .text-\[var\(--teal\)\] {
    color: var(--teal);
  }

  .text-black {
    color: var(--color-black);
  }

  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .opacity-40 {
    opacity: .4;
  }

  .opacity-80 {
    opacity: .8;
  }

  .opacity-90 {
    opacity: .9;
  }

  .mix-blend-difference {
    mix-blend-mode: difference;
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-500 {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  @media (hover: hover) {
    .hover\:bg-\[var\(--light-gray\)\]:hover {
      background-color: var(--light-gray);
    }
  }

  @media (hover: hover) {
    .hover\:text-\[var\(--teal\)\]:hover {
      color: var(--teal);
    }
  }

  @media (width >= 48rem) {
    .md\:w-\[25vw\] {
      width: 25vw;
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:text-\[1\.2vw\] {
      font-size: 1.2vw;
    }
  }

  @media (width >= 48rem) {
    .md\:text-\[1\.5vw\] {
      font-size: 1.5vw;
    }
  }

  @media (width >= 48rem) {
    .md\:text-\[3vw\] {
      font-size: 3vw;
    }
  }

  @media (width >= 48rem) {
    .md\:text-\[4vw\] {
      font-size: 4vw;
    }
  }
}

:root {
  --light-gray: #f9f9f9;
  --dark: #161616;
  --teal: #00d0d2;
  --font-poppins: "Poppins", sans-serif;
}

@keyframes rotateArrow {
  from {
    transform: rotate(-45deg);
  }

  to {
    transform: rotate(360deg);
  }
}

* {
  box-sizing: border-box;
  margin: 0;
}

html, body {
  background: var(--light-gray);
  width: 100vw;
  font-family: var(--font-poppins);
  overflow-x: hidden;
}

a, a div, a svg, a div > div {
  transition-property: all;
  transition-duration: .3s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

/*# sourceMappingURL=src_app_globals_css_f9ee138c._.single.css.map*/